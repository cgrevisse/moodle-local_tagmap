{"version":3,"file":"utils.min.js","sources":["../src/utils.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Utility functions. Generated with GitHub Copilot.\n *\n * @module     local_tagmap/utils\n * @copyright  2025 Christian Gr√©visse <christian.grevisse@uni.lu>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * Interpolates between two colors depending on a ratio.\n * The color is calculated such that:\n *  - At ratio = 0, the color is the lowerColor\n *  - At ratio = 1, the color is the higherColor\n *  - At low ratios (e.g., 0.05), the color is noticeably closer to higherColor due to ease-in mapping\n *\n * @param {number} ratio - A number between 0 (lowerColor) and 1 (higherColor)\n * @param {{r: number, g: number, b: number}} lowerColor - The color object for the lower bound\n * @param {{r: number, g: number, b: number}} higherColor - The color object for the upper bound\n * @returns {string} - The color as a hex string (e.g., \"#34c759\")\n */\nexport function interpolateColor(ratio, lowerColor, higherColor) {\n    // Clamp between 0 and 1\n    ratio = Math.max(0, Math.min(1, ratio));\n\n    // Adjust the mapping: apply a slight ease-in to make low values closer to higherColor\n    const easedRatio = Math.pow(ratio, 0.6);\n\n    // Interpolate colors\n    const r = Math.round(lowerColor.r + (higherColor.r - lowerColor.r) * easedRatio);\n    const g = Math.round(lowerColor.g + (higherColor.g - lowerColor.g) * easedRatio);\n    const b = Math.round(lowerColor.b + (higherColor.b - lowerColor.b) * easedRatio);\n\n    // Convert to hex\n    return (\n        '#' +\n        r.toString(16).padStart(2, '0') +\n        g.toString(16).padStart(2, '0') +\n        b.toString(16).padStart(2, '0')\n    );\n}\n\n/**\n * Converts a hexadecimal color string to an object with r, g, b keys.\n * Supports 3-digit (#abc) and 6-digit (#aabbcc) formats.\n *\n * @param {string} hex - The hexadecimal color string (e.g., \"#aabbcc\" or \"#abc\")\n * @returns {{r: number, g: number, b: number}} The RGB representation.\n */\nexport function hexToRgb(hex) {\n    // Remove hash if present\n    hex = hex.replace(/^#/, '');\n\n    // Expand 3-digit hex to 6 digits\n    if (hex.length === 3) {\n        hex = hex.split('').map(c => c + c).join('');\n    }\n    if (hex.length !== 6) {\n        throw new Error('Invalid hex color format');\n    }\n\n    return {\n        r: parseInt(hex.slice(0, 2), 16),\n        g: parseInt(hex.slice(2, 4), 16),\n        b: parseInt(hex.slice(4, 6), 16)\n    };\n}\n\n/**\n * Sort tags by usage and name.\n *\n * @param {Object} a Tag 1\n * @param {Object} b Tag 2\n * @returns int -1, 0, or 1 depending on the comparison\n */\nexport function sortTags(a, b) {\n    // Use 'used' for resource tags, 'covered' for question tags.\n    const aUsed = a.used ?? a.covered;\n    const bUsed = b.used ?? b.covered;\n\n    if (aUsed !== bUsed) {\n        return aUsed ? -1 : 1;\n    } else {\n        return a.name.localeCompare(b.name);\n    }\n}\n"],"names":["hex","replace","length","split","map","c","join","Error","r","parseInt","slice","g","b","ratio","lowerColor","higherColor","Math","max","min","easedRatio","pow","round","toString","padStart","a","aUsed","used","covered","bUsed","name","localeCompare"],"mappings":"+IA+DyBA,KAKF,KAHnBA,IAAMA,IAAIC,QAAQ,KAAM,KAGhBC,SACJF,IAAMA,IAAIG,MAAM,IAAIC,KAAIC,GAAKA,EAAIA,IAAGC,KAAK,QAE1B,IAAfN,IAAIE,aACE,IAAIK,MAAM,kCAGb,CACHC,EAAGC,SAAST,IAAIU,MAAM,EAAG,GAAI,IAC7BC,EAAGF,SAAST,IAAIU,MAAM,EAAG,GAAI,IAC7BE,EAAGH,SAAST,IAAIU,MAAM,EAAG,GAAI;;;;;;;;SA3CJG,MAAOC,WAAYC,aAEhDF,MAAQG,KAAKC,IAAI,EAAGD,KAAKE,IAAI,EAAGL,cAG1BM,WAAaH,KAAKI,IAAIP,MAAO,IAG7BL,EAAIQ,KAAKK,MAAMP,WAAWN,GAAKO,YAAYP,EAAIM,WAAWN,GAAKW,YAC/DR,EAAIK,KAAKK,MAAMP,WAAWH,GAAKI,YAAYJ,EAAIG,WAAWH,GAAKQ,YAC/DP,EAAII,KAAKK,MAAMP,WAAWF,GAAKG,YAAYH,EAAIE,WAAWF,GAAKO,kBAIjE,IACAX,EAAEc,SAAS,IAAIC,SAAS,EAAG,KAC3BZ,EAAEW,SAAS,IAAIC,SAAS,EAAG,KAC3BX,EAAEU,SAAS,IAAIC,SAAS,EAAG,iCAqCVC,EAAGZ,SAElBa,MAAQD,EAAEE,MAAQF,EAAEG,QACpBC,MAAQhB,EAAEc,MAAQd,EAAEe,eAEtBF,QAAUG,MACHH,OAAS,EAAI,EAEbD,EAAEK,KAAKC,cAAclB,EAAEiB"}